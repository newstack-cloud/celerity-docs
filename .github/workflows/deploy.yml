name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main
    # Review gh actions docs if you want to further define triggers, paths, etc
    # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#on

jobs:
  build:
    name: Build Celerity Docs Site
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Enable Corepack
        run: corepack enable

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: yarn

      - name: Setup Pages
        id: setup_pages
        uses: actions/configure-pages@v5

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Set variables in dotenv file
        run: |
          echo "NEXT_PUBLIC_ALGOLIA_APP_ID=${{ vars.ALGOLIA_APP_ID }}" >> .env
          echo "NEXT_PUBLIC_ALGOLIA_API_KEY=${{ vars.ALGOLIA_SEARCH_API_KEY }}" >> .env
          echo "NEXT_PUBLIC_ALGOLIA_INDEX_NAME=${{ vars.ALGOLIA_INDEX_NAME }}" >> .env
          echo "ALGOLIA_SECRET_API_KEY=${{ secrets.ALGOLIA_SECRET_API_KEY }}" >> .env

      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx', '**.mdx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}-

      - name: Build website
        run: yarn build
        env:
          PAGES_BASE_PATH: ${{ steps.setup_pages.outputs.base_path }}

      - name: Upload Build Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  deploy:
    name: Deploy to GitHub Pages
    needs: build

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write # to deploy to Pages
      id-token: write # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
